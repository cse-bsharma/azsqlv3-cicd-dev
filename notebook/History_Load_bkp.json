{
	"name": "History_Load_bkp",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "largepool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 5,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "5"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/7e416de3-c506-4776-8270-83fd73c6cc37/resourceGroups/cse-dw-pilot/providers/Microsoft.Synapse/workspaces/azsqlv3/bigDataPools/largepool",
				"name": "largepool",
				"type": "Spark",
				"endpoint": "https://azsqlv3.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/largepool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"from pyspark.sql.types import *"
				],
				"attachments": null,
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"account_name = \"azlandingpilot\"\r\n",
					"container_name= \"history\"\r\n",
					"adls_path = 'abfss://%s@%s.dfs.core.windows.net' % (container_name, account_name)"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"tabdf = spark.read.format(\"jdbc\") \\\r\n",
					"    .option(\"url\", f\"jdbc:sqlserver://13.84.151.236:1433;databaseName=MedicareAnalysisDM\") \\\r\n",
					"    .option(\"dbtable\", \"sys.tables\") \\\r\n",
					"    .option(\"user\", \"apsadmin\") \\\r\n",
					"    .option(\"password\", \"P@ssword1234\") \\\r\n",
					"    .option(\"driver\", \"com.microsoft.sqlserver.jdbc.SQLServerDriver\") \\\r\n",
					"    .load()"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"tabdf.createOrReplaceTempView('tabinfo')"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# tablst=tabdf.select(\"NAME\").distinct().filter(tabdf[\"name\"] != \"sysdiagrams\").filter(tabdf[\"name\"] != \"Details\").collect()\r\n",
					"tablst=tabdf.select(\"NAME\").distinct().filter(tabdf[\"name\"] != \"sysdiagrams\").collect()"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# scala_list=tabdf.select(\"NAME\").distinct().filter(tabdf[\"name\"] != \"sysdiagrams\").filter(tabdf[\"name\"] != \"Details\")\r\n",
					"scala_list=tabdf.select(\"NAME\").distinct().filter(tabdf[\"name\"] != \"sysdiagrams\")\r\n",
					"scala_list.createOrReplaceTempView('tabinfo')"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def extract(table_name):\r\n",
					"    data = spark.read.format(\"jdbc\") \\\r\n",
					"    .option(\"url\", f\"jdbc:sqlserver://13.84.151.236:1433;databaseName=MedicareAnalysisDM\") \\\r\n",
					"    .option(\"dbtable\", table_name) \\\r\n",
					"    .option(\"user\", \"apsadmin\") \\\r\n",
					"    .option(\"password\", \"P@ssword1234\") \\\r\n",
					"    .option(\"driver\", \"com.microsoft.sqlserver.jdbc.SQLServerDriver\") \\\r\n",
					"    .load()\r\n",
					"    return data"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"for row in tablst:\r\n",
					"    tabdata=extract(str(row[\"NAME\"]))\r\n",
					"    # tabdata.write.format(\"parquet\").mode(\"overwrite\") \\\r\n",
					"    # .option(\"compression\",\"snappy\")\\\r\n",
					"    # .option(\"numPartitions\",\"4\")\\\r\n",
					"    # .option(\"encoding\", \"UTF-8\")\\\r\n",
					"    # .save(\"abfss://history@azlandingpilot.dfs.core.windows.net/\" +str(row[\"NAME\"]))\r\n",
					"    # df = spark.read.parquet(\"abfss://history@azlandingpilot.dfs.core.windows.net/\" +str(row[\"NAME\"]))\r\n",
					"    tabdata.createOrReplaceTempView(str(row[\"NAME\"]))"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					}
				},
				"source": [
					"%%spark\r\n",
					"import com.microsoft.spark.sqlanalytics.utils.Constants\r\n",
					"import org.apache.spark.sql.SqlAnalyticsConnector._\r\n",
					"val scala_df = spark.sqlContext.sql (\"select * from tabinfo\")\r\n",
					"for (row <- scala_df.rdd.collect)\r\n",
					"{   \r\n",
					"    var name = row.mkString(\",\").split(\",\")(0)\r\n",
					"    var sqltext=(\"select * from \" + name)\r\n",
					"    val df = spark.sqlContext.sql (sqltext)\r\n",
					"    df.write.synapsesql(\"azsqldw.stg.\"+name, Constants.INTERNAL)\r\n",
					"}"
				],
				"attachments": null,
				"execution_count": null
			}
		]
	}
}